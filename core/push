#!/bin/bash
####################################################################
# Prey Core Push Functions - by Tomas Pollak (bootlog.org)
# URL: http://preyproject.com
# License: GPLv3
####################################################################

send_report(){
	echo ' -- Packing all gathered traces...'
	local trace_list=`list_traces`
	file_list=`list_files`
	if [[ $trace_list || $file_list ]]; then
			trace_file="$tmpdir/prey_traces.tmp"
			echo -e "$trace_list" > "$trace_file"
			echo " -- Posting data via $post_method..."
			eval 'send_via_'"${post_method}"''
			rm -f "$trace_file"
		remove_traces
		remove_files
	else
		echo " -- No data to send. We're done!"
	fi
}

send_via_email(){

	local decoded_pass=`decrypt "$smtp_password"`
	local complete_subject="$mail_subject @ `date +"%a, %e %Y %T %z"`"
	echo -e "$EMAIL_NOTICE $EMAIL_HEADER" | cat - "$trace_file" | sed "s/%0A/\n/g;s/%22/\"/g" > "$trace_file.msg" && echo -e "$EMAIL_FOOTER" >> "$trace_file.msg"

	response=`$mailsender -f "$mail_from" -t "$mail_to" -u "$complete_subject" -s $smtp_server -a $file_list -o message-file="$trace_file.msg" tls=auto username=$smtp_username password=$decoded_pass`

	if [ `find_in "$response" 'ERROR'` ]; then
		echo -e "$STRING_ERROR_EMAIL"
		echo -e "\n This is the complete error message: \n $response\n"
	else
		echo ' -- Report successfully sent! Check your inbox now.'
	fi

	rm "$trace_file.msg"
}
send_via_secureemail(){

	local decoded_pass=`decrypt "$smtp_password"`
	local decoded_zip_pass=`decrypt "$zip_password"`
	
	file_list=`make_secure_zip`
	
	local complete_subject="$mail_subject @ `date +"%a, %e %Y %T %z"`"
	echo -e "$EMAIL_NOTICE $EMAIL_HEADER" | cat - "$trace_file" | sed "s/%0A/\n/g;s/%22/\"/g" > "$trace_file.msg" && echo -e "$EMAIL_FOOTER" >> "$trace_file.msg"

	response=`$mailsender -f "$mail_from" -t "$mail_to" -u "$complete_subject" -s $smtp_server -a $file_list -o message-file="$trace_file.msg" tls=auto username=$smtp_username password=$decoded_pass`

	if [ `find_in "$response" 'ERROR'` ]; then
		echo -e "$STRING_ERROR_EMAIL"
		echo -e "\n This is the complete error message: \n $response\n"
	else
		echo ' -- Report successfully sent! Check your inbox now.'
	fi

	rm "$trace_file.msg"
}

send_via_http(){
	if [ -z "$api_key" ]; then
		echo ' -- API key not set! Cannot post data to server.'
		return 1
	else
		local args="-u $api_key:x"
	fi
	if [ -z "$post_url" ]; then
		local post_url=`echo $check_url | sed 's/\.xml/\/reports\.xml/'`
	fi
	if [ `find_in "$post_url" 'https'` ]; then
		args="$args -k -3"
	fi
	response=`$getter $args "$user_agent" -K "$trace_file" $file_list "$post_url" \
	--write "\n -- %{size_upload} bytes uploaded in %{time_total} seconds, at %{speed_upload} bytes/sec."`

	echo " -- $response"
}

send_via_scp(){
	if [[ -n "$scp_server" && -n "$scp_path" ]]; then
		echo -e " -- Uploading the stuff to $scp_path in $scp_server..."
		local new_folder="prey_data_`echo $start_time | sed 'y/ :/_-/'`"
		ssh $scp_user@$scp_server mkdir $scp_path/$new_folder
		response=`scp $trace_file $file_list $scp_user@$scp_server:$scp_path/$new_folder`
	else
		echo ' !! You need to set up a server in order to send the report via SCP!'
	fi
}
